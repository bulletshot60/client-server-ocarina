package MyServer
public
	with FullSystem;
	
	subprogram my_server_subprogram
		features 
			in_data: in parameter FullSystem::Integer_Type;
			out_data: out parameter FullSystem::Integer_Type;
	end my_server_subprogram;
	
	subprogram implementation my_server_subprogram.impl
		connections
			in_to_out: parameter in_data -> out_data;
	end my_server_subprogram.impl;
	
	thread my_server_thread
		features 
			in_data: in data port FullSystem::Integer_Type;
			out_data: out data port FullSystem::Integer_Type;
	end my_server_thread;
	
	thread implementation my_server_thread.impl
		calls K : {
			request_processor: subprogram my_server_subprogram;
		};
		connections
			processor_in: parameter in_data -> request_processor.in_data;
			processor_out: parameter request_processor.out_data -> out_data;
	end my_server_thread.impl;
	
	process my_server_process
		features 
			in_data: in data port FullSystem::Integer_Type;
			out_data: out data port FullSystem::Integer_Type;
	end my_server_process;
	
	process implementation my_server_process.impl
		subcomponents
			request_processor: thread my_server_thread.impl;
		connections
			processor_in: port in_data -> request_processor.in_data;
			processor_out: port request_processor.out_data -> out_data;
	end my_server_process.impl;
	
end MyServer;
